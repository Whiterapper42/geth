# .github/workflows/notarize.yml
name: Notarize Geth Binary

on:
  push:
    paths:
      - '**.exe.asc'
      - '**.exe'

jobs:
  notarize:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y gnupg ipfs open-timestamps-client

      - name: Run Notarization Script
        run: bash ./notarize.sh
on:
  schedule:
    - cron: '0 0 * * 0' # every Sunday at midnight
jobs:
  restamp:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Re-stamp Proofs
        run: |
          for f in *.txt; do
            ots stamp "$f"
          done
name: Notarize Geth Binary

on:
  push:
    paths:
      - '**.exe.asc'
      - '**.exe'
  schedule:
    - cron: '0 0 * * 0'  # every Sunday

jobs:
  notarize:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y gnupg ipfs open-timestamps-client
      - name: Run Notarization Script
        run: bash notarization-tools/notarize.sh
on:
  push:
    branches: [main]
  workflow_dispatch:
jobs:
  notarize:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run Notarization
        run: bash bash/notarize.sh
yaml-lint .github/workflows/crystal.yml
name: Node Notarization & Proof

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  notarize:
    name: Geth & Lighthouse Notarization
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y gnupg ipfs open-timestamps-client jq

      - name: Run Geth Notarization
        run: |
          if [ -f notarization-tools/notarize.sh ]; then
            bash notarization-tools/notarize.sh
          fi

      - name: Run Beacon Notarization
        run: |
          if [ -f beacon/launch-lighthouse.sh ]; then
            bash beacon/launch-lighthouse.sh
          fi

      - name: Log Proofs
        run: |
          echo "::group::Authorship Proof Files"
          ls -l *authorship-proof*.txt || true
          echo "::endgroup::"

      - name: Commit Updated release.json Files
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add release.json beacon/beacon-release.json || true
          git commit -m "auto: refresh release metadata via CI" || echo "No changes to commit."
          git push
